{"ast":null,"code":"var _jsxFileName = \"/Users/bertillemenguy/L3_II/Projet/xavierplusbertillecoeur/src/MyComponent.js\";\nimport React from 'react';\nimport Header from './Header';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:7179/depart\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, // Remarque : il est important de traiter les erreurs ici\n    // au lieu d'utiliser un bloc catch(), pour ne pas passer à la trappe\n    // des exceptions provenant de réels bugs du composant.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  renderHeader() {\n    return /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this);\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n    console.log(items);\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Erreur : \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Chargement\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [this.renderHeader(), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 35\n        }, this), [//'Info',\n        'Light'].map((variant, idx) => /*#__PURE__*/_jsxDEV(Card, {\n          bg: variant.toLowerCase(),\n          text: variant.toLowerCase() === 'light' ? 'dark' : 'white',\n          style: {\n            width: '15rem'\n          },\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"Formation choisie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [item.nomDepartement, \" \", item.idDepartement]\n              }, item.idDepartement, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 20\n              }, this)), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                size: \"lg\",\n                children: \"Block level button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                size: \"lg\",\n                children: \"Block level button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: \"Ajouter une formation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default MyComponent;","map":{"version":3,"sources":["/Users/bertillemenguy/L3_II/Projet/xavierplusbertillecoeur/src/MyComponent.js"],"names":["React","Header","Button","Card","MyComponent","Component","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","renderHeader","render","console","log","message","map","variant","idx","toLowerCase","width","item","nomDepartement","idDepartement"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAGA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAGDC,EAAAA,iBAAiB,GAAG;AAElBC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEM;AAFK,OAAd;AAID,KARL,EASI;AACA;AACA;AACCR,IAAAA,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAjBL;AAqBD;;AAEDU,EAAAA,YAAY,GAAG;AACb,wBACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGD;;AAGDC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEX,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;;AAEF,QAAIF,KAAJ,EAAW;AACT,0BAAO;AAAA,gCAAeA,KAAK,CAACc,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACb,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACQ;AAAA,mBACH,KAAKS,YAAL,EADG,oBACkB;AAAA;AAAA;AAAA;AAAA,gBADlB,EAGD,CACC;AACD,eAFA,EAGCK,GAHD,CAGK,CAACC,OAAD,EAAUC,GAAV,kBACJ,QAAC,IAAD;AACE,UAAA,EAAE,EAAED,OAAO,CAACE,WAAR,EADN;AAGE,UAAA,IAAI,EAAEF,OAAO,CAACE,WAAR,OAA0B,OAA1B,GAAoC,MAApC,GAA6C,OAHrD;AAIE,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAJT;AAKE,UAAA,SAAS,EAAC,MALZ;AAAA,kCAME,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE,QAAC,IAAD,CAAM,IAAN;AAAA,oCACE,QAAC,IAAD,CAAM,IAAN;AAAA,yBACCjB,KAAK,CAACa,GAAN,CAAUK,IAAI,iBAChB;AAAA,2BACEA,IAAI,CAACC,cADP,OACwBD,IAAI,CAACE,aAD7B;AAAA,iBAASF,IAAI,CAACE,aAAd;AAAA;AAAA;AAAA;AAAA,sBADE,CADD,oBAKK;AAAA;AAAA;AAAA;AAAA,sBALL;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,sCACA,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,SAAhB;AAA0B,gBAAA,IAAI,EAAC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAIA,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,WAAhB;AAA4B,gBAAA,IAAI,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,eAmBE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnBF,EAmB2D,GAnB3D;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA,WAEOL,GAFP;AAAA;AAAA;AAAA;AAAA,gBAJD,CAHC,eAoCC;AAAA;AAAA;AAAA;AAAA,gBApCD;AAAA;AAAA;AAAA;AAAA;AAAA,cADR;AA2CD;AACF;;AAlGqC;;AAsGxC,eAAetB,WAAf","sourcesContent":["import React from 'react';\nimport Header from './Header';\n\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\n\nclass MyComponent extends React.Component {\n\n   constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        items: []\n      };\n    }\n\n    \n    componentDidMount() {\n    \n      fetch(\"http://localhost:7179/depart\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              isLoaded: true,\n              items: result\n            });\n          },\n          // Remarque : il est important de traiter les erreurs ici\n          // au lieu d'utiliser un bloc catch(), pour ne pas passer à la trappe\n          // des exceptions provenant de réels bugs du composant.\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )\n\n        \n    }\n  \n    renderHeader() {\n      return (\n          <Header/>\t\t\t\n      );\n    };\n\n\n    render() {\n\n        const { error, isLoaded, items } = this.state;\n        console.log(items);\n\n      if (error) {\n        return <div>Erreur : {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Chargement…</div>;\n      } else {\n        return (\n                <ul>\n            {this.renderHeader()} <br />\n        \n              {[\n                //'Info',\n               'Light'\n              ].map((variant, idx) => (\n                <Card\n                  bg={variant.toLowerCase()}\n                  key={idx}\n                  text={variant.toLowerCase() === 'light' ? 'dark' : 'white'}\n                  style={{ width: '15rem' }}\n                  className=\"mb-2\">\n                  <Card.Header>Formation choisie</Card.Header>\n                  <Card.Body>\n                    <Card.Text>\n                    {items.map(item => (\n                   <li key={item.idDepartement}>\n                    {item.nomDepartement} {item.idDepartement}\n                    </li>\n                     ))} <br />\n                    </Card.Text>\n                    \n                    \n                    <div className=\"d-grid gap-2\">\n                    <Button variant=\"primary\" size=\"lg\">\n                      Block level button\n                    </Button>\n                    <Button variant=\"secondary\" size=\"lg\">\n                      Block level button\n                    </Button>\n                  </div>\n                    \n                    <Button variant=\"primary\">Ajouter une formation</Button>{' '}\n                  </Card.Body>\n                </Card>\n              ))}<br />\n\n\n          </ul>\n       \n        );\n      }\n    }\n\n  }\n\n  export default MyComponent;"]},"metadata":{},"sourceType":"module"}