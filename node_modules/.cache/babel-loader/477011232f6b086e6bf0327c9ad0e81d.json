{"ast":null,"code":"import React from 'react';\n\nclass MyComponent extends React.Component {\n  /*\n     constructor(props) {\n        super(props);\n        this.state = {\n          error: null,\n          isLoaded: false,\n          items: []\n        };\n      }\n    */\n  componentDidMount() {\n    fetch(\"https://api.example.com/items\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    }, // Remarque : il est important de traiter les erreurs ici\n    // au lieu d'utiliser un bloc catch(), pour ne pas passer à la trappe\n    // des exceptions provenant de réels bugs du composant.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    /* const { error, isLoaded, items } = this.state;\n      if (error) {\n       return <div>Erreur : {error.message}</div>;\n     } else if (!isLoaded) {\n       return <div>Chargement…</div>;\n     } else {\n       return (\n         <ul>\n           {items.map(item => (\n             <li key={item.name}>\n               {item.name} {item.price}\n             </li>\n           ))}\n         </ul>\n       );\n     }*/\n  }\n\n}\n\nexport default MyComponent;","map":{"version":3,"sources":["/Users/bertillemenguy/L3_II/Projet/application/src/MyComponent.js"],"names":["React","MyComponent","Component","componentDidMount","fetch","then","res","json","result","setState","isLoaded","items","error","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEIC,EAAAA,iBAAiB,GAAG;AAGlBC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEH,MAAM,CAACG;AAFF,OAAd;AAID,KARL,EASI;AACA;AACA;AACCC,IAAAA,KAAD,IAAW;AACT,WAAKH,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,IADE;AAEZE,QAAAA;AAFY,OAAd;AAID,KAjBL;AAqBD;;AAEDC,EAAAA,MAAM,GAAG;AAER;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEK;;AA1DqC;;AA8DxC,eAAeZ,WAAf","sourcesContent":["import React from 'react';\n\nclass MyComponent extends React.Component {\n\n/*\n   constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        items: []\n      };\n    }\n  */\n \n    componentDidMount() {\n\n    \n      fetch(\"https://api.example.com/items\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              isLoaded: true,\n              items: result.items\n            });\n          },\n          // Remarque : il est important de traiter les erreurs ici\n          // au lieu d'utiliser un bloc catch(), pour ne pas passer à la trappe\n          // des exceptions provenant de réels bugs du composant.\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )\n\n        \n    }\n  \n    render() {\n\n     /* const { error, isLoaded, items } = this.state;\n\n      if (error) {\n        return <div>Erreur : {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Chargement…</div>;\n      } else {\n        return (\n          <ul>\n            {items.map(item => (\n              <li key={item.name}>\n                {item.name} {item.price}\n              </li>\n            ))}\n          </ul>\n        );\n      }*/\n    }\n\n  }\n\n  export default MyComponent;"]},"metadata":{},"sourceType":"module"}